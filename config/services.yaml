# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  env(RABBITMQ_DSN): 'amqp://rebbitmq:secret@rabbitmq:5672/%2f'


services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'
      - '../src/Tests/'
      - '../src/DomainService/TasksDeferredService/Entity'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller/'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\InfrastructureService\TriggerHookService\TriggerHookService:
    arguments:
      $host: '%env(TASKS_DEFERRED_SERVICE_HOST)%'

  App\DomainService\TasksDeferredService\DelayServiceInterface:
    alias: App\InfrastructureService\TriggerHookService\TriggerHookService


  trigger_hook_service.serializer:
    class: App\InfrastructureService\TriggerHookService\Serializer
    arguments:
      $messageClass: App\InfrastructureService\TriggerHookService\BusMessage\TaskExecuteMessage


  App\DomainService\TasksDeferredService\TasksDeferredService:
    tags:
      - name: kernel.event_listener
        event: App\InfrastructureService\TriggerHookService\Event\TaskExecuteEvent
        method: onTaskExecuteEvent
